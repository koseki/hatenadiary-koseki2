
*GithubApi* Github APIメモ

Github API (version 2)のメモ。主に情報取得系のAPIについて。


** 概要

ドキュメント

- http://develop.github.com/

フォーマットにxml,yaml,jsonを指定できる。以下ではXMLを指定する。ブラウザで見やすいので。

- http://github.com/api/v2/:format (URLのベース)

取得系のURLパターン。

- ID不要
-- repos/search/キーワード …… リポジトリ検索
-- repos/show/ユーザ …… ユーザのリポジトリ一覧
-- repos/show/ユーザ/リポジトリ …… リポジトリ情報
-- commits/list/ユーザ/リポジトリ/ブランチ …… 最近のコミット(コミットID、ルートツリーIDが得られる)
-- commits/list/ユーザ/リポジトリ/ブランチ/パス …… 最近のコミット (コミットID、ルートツリーIDが得られる)
- ID必要
-- commits/show/ユーザ/リポジトリ/コミットID …… コミット詳細(diffを含む)
-- tree/show/ユーザ/リポジトリ/ツリーID …… ディレクトリの中身
-- blob/show/ユーザ/リポジトリ/ツリーID/パス …… ファイルの中身
-- blob/show/ユーザ/リポジトリ/各種ID …… 生データ


** オブジェクト

github APIで表現されるgitオブジェクト。

- commitオブジェクト
-- ID
-- ツリーID
-- parent IDs
-- コミットログ
-- githubのURL
-- 作者
-- 作成日
-- コミッタ
-- コミット日
-- diff (追加・修正・削除)
- treeオブジェクト(ディレクトリ)
-- 配列
--- ID
--- 名前
--- タイプ(blob/tree)
--- パーミッション
- blobオブジェクト(ファイル)
-- ID
-- 名前
-- サイズ
-- パーミッション
-- MIMEタイプ
-- ファイルの中身


** リポジトリAPI

- http://develop.github.com/p/repo.html


*** 検索

リポジトリを検索する。

>||
/repos/search/キーワード
||<

- 例: http://github.com/api/v2/xml/repos/search/ruby+testing (xml)
- 例: http://github.com/api/v2/yaml/repos/search/ruby+testing (yaml)
- 例: http://github.com/api/v2/json/repos/search/ruby+testing (json)


*** 取得

特定のユーザのリポジトリ一覧を取得する。

>||
/repos/show/ユーザ
||<

- 例: http://github.com/api/v2/xml/repos/show/koseki

リポジトリの情報を取得する。

>||
/repos/show/ユーザ/リポジトリ
||<

- 例: http://github.com/api/v2/xml/repos/show/koseki/hatenadiary-writer


** コミットAPI

- http://develop.github.com/p/commits.html


*** ブランチへのコミット

ブランチへのコミットログを取得する。

>||
commits/list/ユーザ/リポジトリ/ブランチ
||<

- 例: http://github.com/api/v2/xml/commits/list/rails/rails/master
- 例: http://github.com/api/v2/xml/commits/list/koseki/hatenadiary-writer/master

最新から最大30件。ページ送りはできないっぽい。parentで1つ前のコミットなら取得できる。


*** ファイルへのコミット

ファイルへのコミットログを取得する。

>||
commits/list/ユーザ/リポジトリ/ブランチ/パス
||<

- 例: http://github.com/api/v2/xml/commits/list/rails/rails/master/.gitignore
- 例: http://github.com/api/v2/xml/commits/list/rails/rails/master/railties/bin/rails

ディレクトリも指定できる。

- 例: http://github.com/api/v2/xml/commits/list/rails/rails/master/railties/bin/
- 例: http://github.com/api/v2/xml/commits/list/koseki/hatenadiary-writer/master/lib


*** 単一のコミット取得

IDでコミットを取得する。一覧で取得できる情報に加えて、変更箇所のdiffが得られる。

>||
commits/show/ユーザ/リポジトリ/コミットID
||<

- 例: http://github.com/api/v2/xml/commits/show/koseki/hatenadiary-writer/875fe21f2a29de85596a2c2edfad169df6ce04e7


** オブジェクトAPI

- http://develop.github.com/p/object.html


*** Tree

>||
tree/show/ユーザ/リポジトリ/ツリーID
||<

ドキュメントには書かれていないが、コミットIDも指定できた。

- 例: http://github.com/api/v2/xml/tree/show/koseki/hatenadiary-writer/dfa37551f14888aceaffe508f584570db5668b99 (ツリーID)
- 例: http://github.com/api/v2/xml/tree/show/koseki/hatenadiary-writer/875fe21f2a29de85596a2c2edfad169df6ce04e7 (コミットID)


*** Blob

>||
blob/show/ユーザ/リポジトリ/ツリーID/パス
||<

- 例: http://github.com/api/v2/xml/blob/show/koseki/hatenadiary-writer/dfa37551f14888aceaffe508f584570db5668b99/.gitignore
- ツリーIDで指定したディレクトリの直下のファイルしか取れない。
-- 例: http://github.com/api/v2/xml/blob/show/koseki/hatenadiary-writer/1412aa44f43eda7d471b622081db36996ea37762/hatena_preview_server.rb (下層のツリーID/直下のパス) → OK
-- 例: http://github.com/api/v2/xml/blob/show/koseki/hatenadiary-writer/dfa37551f14888aceaffe508f584570db5668b99/lib/hatena_preview_server.rb (ルートツリーID/下層のパス) → NG


*** 生データ

>||
blob/show/ユーザ/リポジトリ/Blob・ツリー・コミットID
||<

- 例: http://github.com/api/v2/xml/blob/show/koseki/hatenadiary-writer/875fe21f2a29de85596a2c2edfad169df6ce04e7 (コミットIDを指定)


** その他のAPI

- ユーザ管理(User API)
- イシュートラッキング (Issue API)
- ネットワーク (Network API)
- リポジトリの作成・削除・フォーク等

などがある。


** GithubのURL設計

サイトのURL設計。だいたいこんな感じ。

>||
http://github.com/ユーザ/リポジトリ/オブジェクトタイプ/ID/パス
||<

- オブジェクトタイプ
-- blog
-- tree
-- commit
- ID
-- コミットID
-- ブランチ名
-- タグ名

>||
http://github.com/ユーザ/リポジトリ/commit/コミットID
http://github.com/ユーザ/リポジトリ/tree/コミットID
http://github.com/ユーザ/リポジトリ/tree/コミットID/下位のディレクトリのパス
http://github.com/ユーザ/リポジトリ/blob/コミットID/ファイルのパス
||<

- ツリーを表示するのにツリーのIDは指定しない。URLだけ見てtreeとcommit表示を切り替えられる。
- APIとのズレ。コミットIDとパスだけ使ってツリーを取得するのは大変。
-- コミットID → コミットオブジェクト → ルートツリーID → ルートツリーオブジェクト → パスを下降しながらツリーオブジェクトを順に取得 → 目的のツリーオブジェクトをゲット


** この記事の履歴

<script src="http://www.gmodules.com/ig/ifr?url=http://hosting.gmodules.com/ig/gadgets/file/100579023787743225942/github-recent-commits.xml&amp;up_user=koseki&amp;up_repo=hatenadiary-koseki2&amp;up_branch=master&amp;up_path=%2F2009-07-14-GithubApi.txt&amp;synd=open&amp;w=600&amp;h=100&amp;title=&amp;border=%23ffffff%7C3px%2C1px+solid+%23999999&amp;output=js"></script>

